version: '3.8'

services:
  app:
    build: .
    container_name: app
    volumes:
      - ./:/var/www
      - storage-volume:/var/www/storage
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=root
      - DB_PASSWORD=secret
      - GOOGLE_SERVICE_ACCOUNT_JSON=${GOOGLE_SERVICE_ACCOUNT_JSON}
      - GOOGLE_SERVICE_ACCOUNT_JSON_BASE64=${GOOGLE_SERVICE_ACCOUNT_JSON_BASE64}
      - GOOGLE_SPREADSHEET_ID=${GOOGLE_SPREADSHEET_ID}
    networks:
      - laravel-network  
    depends_on:
      - db

  webserver:
    image: nginx:alpine
    container_name: webserver
    ports:
      - "8000:8000"
    volumes:
      - ./docker/nginx:/etc/nginx/conf.d
      - ./:/var/www
    networks:
      - laravel-network
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: db
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: secret
    ports:
      - 8080:80
    networks:
      - laravel-network
    depends_on:
      - db

  scheduler:
    image: ${DOCKER_IMAGE:-laravel-app}  # Используем ту же сборку
    container_name: scheduler
    command: php artisan schedule:work  # Для локальной разработки
    volumes:
      - ./:/var/www
      - storage-volume:/var/www/storage
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=root
      - DB_PASSWORD=secret
      - GOOGLE_SERVICE_ACCOUNT_JSON=${GOOGLE_SERVICE_ACCOUNT_JSON}
      - GOOGLE_SERVICE_ACCOUNT_JSON_BASE64=${GOOGLE_SERVICE_ACCOUNT_JSON_BASE64}
      - GOOGLE_SPREADSHEET_ID=${GOOGLE_SPREADSHEET_ID}
    networks:
      - laravel-network
    depends_on:
      - db
      - app

volumes:
  dbdata:
  storage-volume: 

networks:
  laravel-network:
    driver: bridge